import { Headers as HttpHeaders, Options, Variables, RawResult } from './types';
export declare class GraphQLClient {
    private url;
    private options;
    constructor(url: string, options?: Options);
    rawRequest<T extends any>(query: string, variables?: Variables): Promise<RawResult<T>>;
    request<T extends any>(query: string, variables?: Variables): Promise<T>;
    setHeaders(headers: HttpHeaders): GraphQLClient;
    setHeader(key: string, value: string): GraphQLClient;
}
export declare function rawRequest<T extends any>(url: string, query: string, variables?: Variables): Promise<RawResult<T>>;
export declare function request<T extends any>(url: string, query: string, variables?: Variables): Promise<T>;
export { ClientError } from './types';
export default request;
